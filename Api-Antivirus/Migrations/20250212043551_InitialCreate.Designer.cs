// <auto-generated />
using Api_Antivirus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api_Antivirus.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250212043551_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bootcamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Costos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Informacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("InstitucionId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitucionId");

                    b.ToTable("Bootcamps");
                });

            modelBuilder.Entity("BootcampTematica", b =>
                {
                    b.Property<int>("IdBootcamp")
                        .HasColumnType("integer");

                    b.Property<int>("IdTematica")
                        .HasColumnType("integer");

                    b.Property<int>("BootcampId")
                        .HasColumnType("integer");

                    b.Property<int>("TematicaId")
                        .HasColumnType("integer");

                    b.HasKey("IdBootcamp", "IdTematica");

                    b.HasIndex("BootcampId");

                    b.HasIndex("TematicaId");

                    b.ToTable("BootcampTematicas");
                });

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Institucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlAdmision")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlBienestar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlGeneralidades")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlOfertaAcademica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Instituciones");
                });

            modelBuilder.Entity("InstitucionBootcamp", b =>
                {
                    b.Property<int>("IdInstitucion")
                        .HasColumnType("integer");

                    b.Property<int>("IdBootcamp")
                        .HasColumnType("integer");

                    b.Property<int>("BootcampId")
                        .HasColumnType("integer");

                    b.Property<int>("InstitucionId")
                        .HasColumnType("integer");

                    b.HasKey("IdInstitucion", "IdBootcamp");

                    b.HasIndex("BootcampId");

                    b.HasIndex("InstitucionId");

                    b.ToTable("InstitucionBootcamps");
                });

            modelBuilder.Entity("Oportunidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CanalesAtencion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("DatosAdicionales")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Encargado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Guia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("InstitucionId")
                        .HasColumnType("integer");

                    b.Property<string>("Modalidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Requisitos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("InstitucionId");

                    b.ToTable("Oportunidades");
                });

            modelBuilder.Entity("OportunidadInstitucion", b =>
                {
                    b.Property<int>("IdOportunidad")
                        .HasColumnType("integer");

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("InstitucionId")
                        .HasColumnType("integer");

                    b.Property<int>("OportunidadId")
                        .HasColumnType("integer");

                    b.HasKey("IdOportunidad", "IdInstitucion");

                    b.HasIndex("InstitucionId");

                    b.HasIndex("OportunidadId");

                    b.ToTable("OportunidadInstitucion");
                });

            modelBuilder.Entity("Tematica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tematicas");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UsuarioOportunidad", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<int>("IdOportunidad")
                        .HasColumnType("integer");

                    b.Property<int>("OportunidadId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("IdUsuario", "IdOportunidad");

                    b.HasIndex("OportunidadId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioOportunidades");
                });

            modelBuilder.Entity("Bootcamp", b =>
                {
                    b.HasOne("Institucion", "Institucion")
                        .WithMany()
                        .HasForeignKey("InstitucionId");

                    b.Navigation("Institucion");
                });

            modelBuilder.Entity("BootcampTematica", b =>
                {
                    b.HasOne("Bootcamp", "Bootcamp")
                        .WithMany()
                        .HasForeignKey("BootcampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tematica", "Tematica")
                        .WithMany()
                        .HasForeignKey("TematicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bootcamp");

                    b.Navigation("Tematica");
                });

            modelBuilder.Entity("InstitucionBootcamp", b =>
                {
                    b.HasOne("Bootcamp", "Bootcamp")
                        .WithMany()
                        .HasForeignKey("BootcampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Institucion", "Institucion")
                        .WithMany()
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bootcamp");

                    b.Navigation("Institucion");
                });

            modelBuilder.Entity("Oportunidad", b =>
                {
                    b.HasOne("Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Institucion", "Institucion")
                        .WithMany()
                        .HasForeignKey("InstitucionId");

                    b.Navigation("Categoria");

                    b.Navigation("Institucion");
                });

            modelBuilder.Entity("OportunidadInstitucion", b =>
                {
                    b.HasOne("Institucion", "Institucion")
                        .WithMany()
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oportunidad", "Oportunidad")
                        .WithMany()
                        .HasForeignKey("OportunidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucion");

                    b.Navigation("Oportunidad");
                });

            modelBuilder.Entity("UsuarioOportunidad", b =>
                {
                    b.HasOne("Oportunidad", "Oportunidad")
                        .WithMany()
                        .HasForeignKey("OportunidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oportunidad");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
